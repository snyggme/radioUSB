//First byte description:
//Bit 7 - Color or B&W mode. If 0 - B&W; If 1 - color.
//Bit 6 - Palette mode. If 0 - no palette; If 1 - with palette.
//Bit 5 - Palette size if bit 6 is 1. If 0 - 256 colors (8 bit); If 1 - 4096 colors (12 bit).
//Bit 4 - Transparency. If 0 - NO; If 1 - YES and last pixel in array is transparent color.
//Bits 3...0 - color depth. From 1 (1 bit/pixel) till 9 (24 b/p).
//Possible color depth values are - 1, 2, 3, 4, 6, 8, 12, 16 and 24 bit/pixel.

const unsigned char logo_black[] = { 
0x01, //B&W mode. No palette. Without transparency. Gray scale 1 Bit/Pixel.
0x3c, 0x00, 0x3c, 0x00,//Picture dimension 60 x 60 (width x height).
0xff, 
0xff, 
0xf7, 
0xff, 
0xfe, 
0xff, 
0xff, 
0xf0, 
0xff, 
0xff, 
0xeb, 
0xff, 
0xfd, 
0x7f, 
0xff, 
0xf0, 
0xff, 
0xff, 
0xf5, 
0xff, 
0xfa, 
0xff, 
0xff, 
0xf0, 
0xff, 
0xff, 
0xba, 
0x80, 
0x15, 
0xdf, 
0xff, 
0xf0, 
0xff, 
0xff, 
0x5d, 
0x5f, 
0xab, 
0xaf, 
0xff, 
0xf0, 
0xff, 
0xff, 
0xae, 
0xaf, 
0x57, 
0x5f, 
0xff, 
0xf0, 
0xff, 
0xfd, 
0xd5, 
0x56, 
0xaa, 
0xbb, 
0xff, 
0xf0, 
0xff, 
0xfa, 
0xeb, 
0xa9, 
0x5d, 
0x75, 
0xff, 
0xf0, 
0xff, 
0xfd, 
0x75, 
0xd6, 
0xba, 
0xeb, 
0xff, 
0xf0, 
0xff, 
0xee, 
0xaa, 
0xef, 
0x75, 
0x57, 
0xff, 
0xf0, 
0xff, 
0xd7, 
0x5d, 
0x7f, 
0xeb, 
0xaf, 
0xbf, 
0xf0, 
0xff, 
0xeb, 
0xae, 
0xbf, 
0xd7, 
0x5f, 
0x5f, 
0xf0, 
0xff, 
0x75, 
0x57, 
0x7f, 
0xee, 
0xae, 
0xbf, 
0xf0, 
0xfe, 
0xba, 
0xeb, 
0xff, 
0xfd, 
0x75, 
0x77, 
0xf0, 
0xff, 
0x5d, 
0x75, 
0xff, 
0xfa, 
0xfa, 
0xeb, 
0xf0, 
0xff, 
0xaa, 
0xbb, 
0xff, 
0xfd, 
0xf5, 
0xd7, 
0xf0, 
0xf7, 
0xd7, 
0x5f, 
0xff, 
0xff, 
0xea, 
0xae, 
0xf0, 
0xeb, 
0xeb, 
0xaf, 
0xff, 
0xff, 
0xd7, 
0x5d, 
0x70, 
0xf5, 
0xd5, 
0xdf, 
0xff, 
0xff, 
0xae, 
0xba, 
0xf0, 
0xba, 
0xba, 
0xff, 
0xff, 
0xff, 
0xdd, 
0x55, 
0xd0, 
0x5d, 
0x7d, 
0x7f, 
0xff, 
0xff, 
0xfa, 
0xeb, 
0xa0, 
0xae, 
0xbe, 
0xff, 
0xff, 
0xff, 
0xf5, 
0xd7, 
0x50, 
0xd5, 
0x5f, 
0xff, 
0xff, 
0xff, 
0xfb, 
0xaa, 
0xb0, 
0xeb, 
0xaf, 
0xff, 
0xff, 
0xff, 
0xff, 
0x5d, 
0x70, 
0xf5, 
0xd7, 
0xff, 
0xff, 
0xff, 
0xfe, 
0xba, 
0xf0, 
0xfa, 
0xef, 
0xff, 
0xff, 
0xff, 
0xff, 
0x75, 
0xf0, 
0xf9, 
0x7f, 
0xff, 
0xff, 
0xff, 
0xff, 
0xe9, 
0xf0, 
0xfa, 
0xbf, 
0xff, 
0xff, 
0xff, 
0xff, 
0xd5, 
0xf0, 
0xfb, 
0x7f, 
0xff, 
0xff, 
0xff, 
0xff, 
0xed, 
0xf0, 
0xfb, 
0xff, 
0xff, 
0xff, 
0xff, 
0xff, 
0xfd, 
0xf0, 
0xfb, 
0xff, 
0xff, 
0xff, 
0xff, 
0xff, 
0xfd, 
0xf0, 
0xfb, 
0x7f, 
0xff, 
0xff, 
0xff, 
0xff, 
0xed, 
0xf0, 
0xfa, 
0xbf, 
0xff, 
0xff, 
0xff, 
0xff, 
0xd5, 
0xf0, 
0xf9, 
0x7f, 
0xff, 
0xff, 
0xff, 
0xff, 
0xe9, 
0xf0, 
0xfa, 
0xef, 
0xff, 
0xff, 
0xff, 
0xff, 
0x75, 
0xf0, 
0xf5, 
0xd7, 
0xff, 
0xff, 
0xff, 
0xfe, 
0xba, 
0xf0, 
0xeb, 
0xaf, 
0xff, 
0xff, 
0xff, 
0xff, 
0x5d, 
0x70, 
0xd5, 
0x5d, 
0xff, 
0xff, 
0xff, 
0xfb, 
0xaa, 
0xb0, 
0xae, 
0xba, 
0xff, 
0xff, 
0xff, 
0xf5, 
0xd7, 
0x50, 
0x5d, 
0x75, 
0xff, 
0xff, 
0xff, 
0xfa, 
0xeb, 
0xa0, 
0xba, 
0xab, 
0xff, 
0xff, 
0xff, 
0xdd, 
0x55, 
0xd0, 
0xf5, 
0xd7, 
0xdf, 
0xff, 
0xff, 
0xae, 
0xba, 
0xf0, 
0xeb, 
0xaf, 
0xaf, 
0xff, 
0xff, 
0xd7, 
0x5d, 
0x70, 
0xf7, 
0x57, 
0x5f, 
0xff, 
0xfe, 
0xea, 
0xae, 
0xf0, 
0xfe, 
0xba, 
0xbb, 
0xff, 
0xfd, 
0x75, 
0xd7, 
0xf0, 
0xfd, 
0x7d, 
0x75, 
0xff, 
0xfe, 
0xba, 
0xeb, 
0xf0, 
0xfe, 
0xfa, 
0xeb, 
0xff, 
0xff, 
0x55, 
0x77, 
0xf0, 
0xff, 
0xf5, 
0x57, 
0x7f, 
0xef, 
0xae, 
0xbf, 
0xf0, 
0xff, 
0xeb, 
0xae, 
0xbf, 
0xd7, 
0xd7, 
0x5f, 
0xf0, 
0xff, 
0xd7, 
0x5d, 
0x7f, 
0xeb, 
0xab, 
0xbf, 
0xf0, 
0xff, 
0xee, 
0xaa, 
0xef, 
0x75, 
0x75, 
0xff, 
0xf0, 
0xff, 
0xfd, 
0x75, 
0xd6, 
0xba, 
0xfa, 
0xff, 
0xf0, 
0xff, 
0xfa, 
0xeb, 
0xaf, 
0x5d, 
0x7d, 
0xff, 
0xf0, 
0xff, 
0xfd, 
0xd5, 
0x5f, 
0xaa, 
0xbf, 
0xff, 
0xf0, 
0xff, 
0xff, 
0xae, 
0x80, 
0x17, 
0x5f, 
0xff, 
0xf0, 
0xff, 
0xff, 
0x5d, 
0x7f, 
0xeb, 
0xaf, 
0xff, 
0xf0, 
0xff, 
0xff, 
0xba, 
0xff, 
0xf5, 
0xdf, 
0xff, 
0xf0, 
0xff, 
0xff, 
0xf5, 
0xff, 
0xfa, 
0xff, 
0xff, 
0xf0, 
0xff, 
0xff, 
0xeb, 
0xff, 
0xfd, 
0x7f, 
0xff, 
0xf0, 
0xff, 
0xff, 
0xf7, 
0xff, 
0xfe, 
0xff, 
0xff, 
0xf0, 
};